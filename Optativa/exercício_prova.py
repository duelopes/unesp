# -*- coding: utf-8 -*-
"""Exercício_Prova.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UBPFGbGw2ZkPCVtAjbbp7tqJXx_mQKg9

*   **Nome:** Eduardo Lopes de Oliveira
*   **RA:** 161490336

# Exercício de Prova - Para onde tende a média

Crie uma matriz com valores distribuídos aleatoriamente entre 1 e 10, sendo o número de linhas e de colunas determinados por duas variáveis numéricas. Imprima um gráfico da média e do desvio padrão dos elementos da matriz, utilizando-se duas subfiguras da biblioteca Matplotlib (uma para a média e outra para o desvio), de forma que a média e o desvio padrão sejam calculados acumuladamente, elemento a elemento, passando-se por todas as linhas e colunas da matriz.

Exemplo: Se a matriz for 3x3:<br>[[1, 2, 3],<br> [4, 5, 6],<br> [7, 8, 9]],<br> a função da média, por exemplo, será [1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5]]. Ou seja, o primeiro valor da função será 1, o segundo será a média dos valores [1, 2], o terceiro será a média dos valores [1, 2, 3], o quarto será a média dos valores [1, 2, 3, 4], e assim por diante.

OBS: Se preferir, "achate" a matriz em um longo vetor de uma só linha antes de se calcular a média e o desvio padrão. Por exemplo, achatando-se a matriz exemplificada anteriormente, teremos o vetor: [1, 2, 3, 4, 5, 6, 7, 8, 9].

Discussão: responda à quais valores tendem a média e o desvio padrão, se o número de elementos da matriz tendem ao infinito, e por que.
"""

import matplotlib.pyplot as plt
import random
import numpy as np
import statistics

linhas = int(input('Qual o número de linhas e colunas? '))
colunas = linhas
matriz = np.random.randint(1, 11, (linhas, colunas))
lista = []
media = []
desvio = []
contador = 0

for valor_linha in range(linhas):
  for valor_coluna in range(colunas):
    lista.append(matriz[valor_linha, valor_coluna])

print('\n Matriz:')
print(matriz)

print('\n Matriz em lista:')
print(lista)


while contador < linhas**2:
    media.append(sum(lista[:contador+1])/(contador+1))
    desvio.append(np.std(lista[:contador+1]))
    contador +=1

print('\n Média em lista:')
print(media)
print('\n Desvio em lista:')
print(desvio)

print('\n Gráficos:')
fig, ax = plt.subplots(1, 2)
ax[0].plot(media)
ax[1].plot(desvio)
ax[0].set_title('Média')
ax[1].set_title('Desvio')
fig.suptitle('Resultado do Exercício')
plt.show()

"""## Discussão

Se colocarmos um valor muito alto, a média tende a 5,5 e o desvio padrão a aproximadamente 2,75
"""

